https://www.youtube.com/watch?v=SLB_c_ayRMo&list=PPSV


#all optional fields
#use type=any to support any kind of type
variable "<name>" {

    description
    default 
    type
}

Terraform variables can get their values from multiple sources, and Terraform follows a specific order of precedence to determine which value to use. 
Here's a breakdown:

âœ… Ways to Assign Values to Terraform Variables
1. Default Value in variable block
Defined directly in the .tf file.

variable "region" {
  type    = string
  default = "us-west-1"
}
2. CLI -var Option
Passed directly in the terraform plan or apply command.

terraform apply -var="region=us-east-1"

3. CLI -var-file Option
Values can be provided via a .tfvars file.

terraform apply -var-file="dev.tfvars"
Example dev.tfvars:

region = "eu-central-1"

4. Environment Variables
Format: TF_VAR_<variable_name>

export TF_VAR_region=ap-south-1
terraform apply

5. Terraform Cloud or Workspaces
Variables can be set in the Terraform Cloud UI or defined per workspace.

6. terraform.tfvars File (Auto-loaded)
If present in the root module directory, this file is automatically loaded.
region = "us-east-2"

7. terraform.tfvars.json File
Same as above but in JSON format.

{
  "region": "us-east-2"
}
ðŸ“Œ Precedence Order (Highest to Lowest)
1.CLI -var

2.CLI -var-file

3.Environment variables (TF_VAR_)

4.terraform.tfvars or .tfvars.json

5.Default values in the variable block

6. Manual entry during plan/apply