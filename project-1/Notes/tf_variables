https://www.youtube.com/watch?v=SLB_c_ayRMo&list=PPSV


#all optional fields
#use type=any to support any kind of type
variable "<name>" {

    description
    default 
    type
}

Terraform variables can get their values from multiple sources, and Terraform follows a specific order of precedence to determine which value to use. Here's a breakdown:

âœ… Ways to Assign Values to Terraform Variables
1. Default Value in variable block
Defined directly in the .tf file.

hcl
Copy
Edit
variable "region" {
  type    = string
  default = "us-west-1"
}
2. CLI -var Option
Passed directly in the terraform plan or apply command.

bash
Copy
Edit
terraform apply -var="region=us-east-1"
3. CLI -var-file Option
Values can be provided via a .tfvars file.

bash
Copy
Edit
terraform apply -var-file="dev.tfvars"
Example dev.tfvars:

hcl
Copy
Edit
region = "eu-central-1"
4. Environment Variables
Format: TF_VAR_<variable_name>

bash
Copy
Edit
export TF_VAR_region=ap-south-1
terraform apply
5. Terraform Cloud or Workspaces
Variables can be set in the Terraform Cloud UI or defined per workspace.

6. terraform.tfvars File (Auto-loaded)
If present in the root module directory, this file is automatically loaded.

hcl
Copy
Edit
region = "us-east-2"
7. terraform.tfvars.json File
Same as above but in JSON format.

json
Copy
Edit
{
  "region": "us-east-2"
}
ðŸ“Œ Precedence Order (Highest to Lowest)
CLI -var

CLI -var-file

Environment variables (TF_VAR_)

terraform.tfvars or .tfvars.json

Default values in the variable block